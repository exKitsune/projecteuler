/*

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

pub fn solve(term_limit: u64) -> u64 {
    let mut vec = vec![1, 2];

    let mut sum: u64 = 0;
    while vec[vec.len()-1] < term_limit {
        if vec[vec.len()-1] % 2 == 0 { sum += vec[vec.len()-1] }
        vec.push(vec[vec.len()-1] + vec[vec.len()-2]);      
    }

    sum
}

pub fn answer() -> u64 {
    test();

    solve(4000000)
}

fn test() {
    const EXPECTED: u64 = 2 + 8 + 34;
    println!("Expected {} got {}", EXPECTED, solve(90));
    assert!(EXPECTED == solve(90));
}